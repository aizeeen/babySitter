{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api' // Make sure this matches your backend URL\n});\n\n// Add request interceptor to add token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Babysitters\nexport const getBabysitters = async filters => {\n  try {\n    const response = await api.get('/babysitters', {\n      params: filters\n    });\n    return response;\n  } catch (error) {\n    console.error('Error fetching babysitters:', error);\n    throw error;\n  }\n};\nexport const getBabysitterById = id => api.get(`/babysitters/${id}`);\n\n// Reservations\nexport const createReservation = data => api.post('/reservations', data);\nexport const getReservations = () => api.get('/reservations');\nexport const updateReservationStatus = (id, status) => api.patch(`/reservations/${id}/status`, {\n  status\n});\n\n// Reviews\nexport const createReview = data => api.post('/reviews', data);\nexport const getBabysitterReviews = babysitterId => api.get(`/reviews/babysitter/${babysitterId}`);\n\n// Auth endpoints\nexport const login = async data => {\n  console.log('Making login request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/login', data);\n    console.log('Login API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Login API error:', error); // Debug log\n    throw error;\n  }\n};\nexport const register = async data => {\n  console.log('Making registration request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/signup', data);\n    console.log('Registration API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Registration API error:', error); // Debug log\n    throw error;\n  }\n};\nexport const logout = () => api.post('/auth/logout');\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","getBabysitters","filters","get","params","console","getBabysitterById","id","createReservation","data","post","getReservations","updateReservationStatus","patch","createReview","getBabysitterReviews","babysitterId","login","log","register","logout"],"sources":["/home/iheb/Downloads/Telegram Desktop/babysitter/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api', // Make sure this matches your backend URL\n});\n\n// Add request interceptor to add token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Babysitters\nexport const getBabysitters = async (filters) => {\n  try {\n    const response = await api.get('/babysitters', { params: filters });\n    return response;\n  } catch (error) {\n    console.error('Error fetching babysitters:', error);\n    throw error;\n  }\n};\n\nexport const getBabysitterById = (id) => api.get(`/babysitters/${id}`);\n\n// Reservations\nexport const createReservation = (data) => api.post('/reservations', data);\nexport const getReservations = () => api.get('/reservations');\nexport const updateReservationStatus = (id, status) => \n  api.patch(`/reservations/${id}/status`, { status });\n\n// Reviews\nexport const createReview = (data) => api.post('/reviews', data);\nexport const getBabysitterReviews = (babysitterId) => \n  api.get(`/reviews/babysitter/${babysitterId}`);\n\n// Auth endpoints\nexport const login = async (data) => {\n  console.log('Making login request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/login', data);\n    console.log('Login API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Login API error:', error); // Debug log\n    throw error;\n  }\n};\n\nexport const register = async (data) => {\n  console.log('Making registration request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/signup', data);\n    console.log('Registration API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Registration API error:', error); // Debug log\n    throw error;\n  }\n};\n\nexport const logout = () => api.post('/auth/logout');\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}