{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api' // Make sure this matches your backend URL\n});\n\n// Add request interceptor to add token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Babysitters\nexport const getBabysitters = async filters => {\n  try {\n    var _response$data, _response$data$data;\n    const response = await api.get('/babysitters', {\n      params: filters\n    });\n    // Ensure we're returning an array even if the response structure varies\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.babysitters) {\n      return {\n        data: response.data.data.babysitters\n      };\n    } else if (Array.isArray(response.data)) {\n      return {\n        data: response.data\n      };\n    } else {\n      console.warn('Unexpected response structure:', response.data);\n      return {\n        data: []\n      };\n    }\n  } catch (error) {\n    console.error('Error fetching babysitters:', error);\n    throw error;\n  }\n};\nexport const getBabysitterById = async id => {\n  try {\n    var _response$data2;\n    const response = await api.get(`/babysitters/${id}`);\n    return (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.data ? response.data : {\n      data: response.data\n    };\n  } catch (error) {\n    console.error('Error fetching babysitter details:', error);\n    throw error;\n  }\n};\n\n// Reservations\nexport const createReservation = async data => {\n  try {\n    console.log('Creating reservation with data:', data);\n    const response = await api.post('/reservations', {\n      ...data,\n      date: new Date(data.date).toISOString().split('T')[0],\n      // Format date as YYYY-MM-DD\n      time: data.time,\n      duration: parseInt(data.duration)\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating reservation:', error);\n    throw error;\n  }\n};\nexport const getReservations = () => api.get('/reservations');\nexport const updateReservationStatus = (id, status) => api.patch(`/reservations/${id}/status`, {\n  status\n});\n\n// Reviews\nexport const createReview = data => api.post('/reviews', data);\nexport const getBabysitterReviews = babysitterId => api.get(`/reviews/babysitter/${babysitterId}`);\n\n// Auth endpoints\nexport const login = async data => {\n  console.log('Making login request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/login', data);\n    console.log('Login API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Login API error:', error); // Debug log\n    throw error;\n  }\n};\nexport const register = async data => {\n  console.log('Making registration request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/signup', data);\n    console.log('Registration API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Registration API error:', error); // Debug log\n    throw error;\n  }\n};\nexport const logout = () => api.post('/auth/logout');\n\n// Add these new endpoints to your existing api.js\nexport const searchBabysitters = params => api.get('/search/babysitters', {\n  params\n});\nexport const updateProfile = data => api.put('/profile', data);\nexport const getProfile = () => api.get('/profile');\nexport const addToFavorites = babysitterId => api.post(`/parents/favorites/${babysitterId}`);\nexport const getFavorites = () => api.get('/parents/favorites');\nexport const updateAvailability = data => api.put('/babysitters/availability', data);\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","getBabysitters","filters","_response$data","_response$data$data","get","params","data","babysitters","Array","isArray","console","warn","getBabysitterById","id","_response$data2","createReservation","log","post","date","Date","toISOString","split","time","duration","parseInt","getReservations","updateReservationStatus","patch","createReview","getBabysitterReviews","babysitterId","login","register","logout","searchBabysitters","updateProfile","put","getProfile","addToFavorites","getFavorites","updateAvailability"],"sources":["/home/iheb/Downloads/Telegram Desktop/babysitter/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api', // Make sure this matches your backend URL\n});\n\n// Add request interceptor to add token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Babysitters\nexport const getBabysitters = async (filters) => {\n  try {\n    const response = await api.get('/babysitters', { params: filters });\n    // Ensure we're returning an array even if the response structure varies\n    if (response.data?.data?.babysitters) {\n      return { data: response.data.data.babysitters };\n    } else if (Array.isArray(response.data)) {\n      return { data: response.data };\n    } else {\n      console.warn('Unexpected response structure:', response.data);\n      return { data: [] };\n    }\n  } catch (error) {\n    console.error('Error fetching babysitters:', error);\n    throw error;\n  }\n};\n\nexport const getBabysitterById = async (id) => {\n  try {\n    const response = await api.get(`/babysitters/${id}`);\n    return response.data?.data ? response.data : { data: response.data };\n  } catch (error) {\n    console.error('Error fetching babysitter details:', error);\n    throw error;\n  }\n};\n\n// Reservations\nexport const createReservation = async (data) => {\n  try {\n    console.log('Creating reservation with data:', data);\n    const response = await api.post('/reservations', {\n      ...data,\n      date: new Date(data.date).toISOString().split('T')[0], // Format date as YYYY-MM-DD\n      time: data.time,\n      duration: parseInt(data.duration)\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating reservation:', error);\n    throw error;\n  }\n};\n\nexport const getReservations = () => api.get('/reservations');\nexport const updateReservationStatus = (id, status) => \n  api.patch(`/reservations/${id}/status`, { status });\n\n// Reviews\nexport const createReview = (data) => api.post('/reviews', data);\nexport const getBabysitterReviews = (babysitterId) => \n  api.get(`/reviews/babysitter/${babysitterId}`);\n\n// Auth endpoints\nexport const login = async (data) => {\n  console.log('Making login request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/login', data);\n    console.log('Login API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Login API error:', error); // Debug log\n    throw error;\n  }\n};\n\nexport const register = async (data) => {\n  console.log('Making registration request with data:', data); // Debug log\n  try {\n    const response = await api.post('/auth/signup', data);\n    console.log('Registration API response:', response); // Debug log\n    return response;\n  } catch (error) {\n    console.error('Registration API error:', error); // Debug log\n    throw error;\n  }\n};\n\nexport const logout = () => api.post('/auth/logout');\n\n// Add these new endpoints to your existing api.js\nexport const searchBabysitters = (params) => api.get('/search/babysitters', { params });\n\nexport const updateProfile = (data) => api.put('/profile', data);\nexport const getProfile = () => api.get('/profile');\n\nexport const addToFavorites = (babysitterId) => api.post(`/parents/favorites/${babysitterId}`);\nexport const getFavorites = () => api.get('/parents/favorites');\n\nexport const updateAvailability = (data) => api.put('/babysitters/availability', data);\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}